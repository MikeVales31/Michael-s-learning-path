apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  labels:
    app: mysql
    component: database
type: Opaque
data:
  # Base64 encoded values (change these in production!)
  # root / listapp_pass / listapp_user
  mysql-root-password: bGlzdGFwcF9wYXNz    # listapp_pass
  mysql-user: bGlzdGFwcF91c2Vy                # listapp_user  
  mysql-password: bGlzdGFwcF9wYXNz            # listapp_pass
  mysql-database: bGlzdGFwcF9kYg==            # listapp_db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  labels:
    app: mysql
    component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  labels:
    app: mysql
    component: database
data:
  my.cnf: |
    [mysqld]
    bind-address = 0.0.0.0
    port = 3306
    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci
    innodb_buffer_pool_size = 256M
    max_connections = 100
    
    [mysql]
    default-character-set = utf8mb4
    
    [client]
    default-character-set = utf8mb4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    component: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
      component: database
  template:
    metadata:
      labels:
        app: mysql
        component: database
    spec:
      containers:
        - name: mysql
          image: listapp-mysql:latest
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-database
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: mysql-config
              mountPath: /etc/mysql/conf.d
              readOnly: true
            - name: mysql-init
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
                - -u
                - root
                - -p$(MYSQL_ROOT_PASSWORD)
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mysql
                - -h
                - localhost
                - -u
                - root
                - -p$(MYSQL_ROOT_PASSWORD)
                - -e
                - "SELECT 1"
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 2
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: mysql-config
          configMap:
            name: mysql-config
        - name: mysql-init
          configMap:
            name: mysql-init-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  labels:
    app: mysql
    component: database
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS listapp_db;
    USE listapp_db;
    
    CREATE TABLE IF NOT EXISTS users (
        id BIGINT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        email VARCHAR(100) NOT NULL UNIQUE,
        age INT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql
    component: database
spec:
  selector:
    app: mysql
    component: database
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: mysql
  type: ClusterIP
